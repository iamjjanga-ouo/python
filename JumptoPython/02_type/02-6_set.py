'''
집합(Set) 자료형?

>>> s1 = set([1,2,3])
>>> s1
{1, 2, 3}

>>> s2 = set("Hello")
>>> s2
{'e', 'H', 'l', 'o'}

    - 중복을 허용하지 않는다.
    - 순서가 없다(Unordered)

※ 중복을 허용하지 않는 set의 특징은 자료형의 중복을 제거하기 위한 필터 역할로 종종 사용하기도 한다.
'''

# set은 인덱싱 지원 X, 저장된 값을 인덱싱 하기 위해서는 List나 Tuple로 변환 후에 가능
s1 = set([1,2,3])
l1 = list(s1)       # [1,2,3]
l1[0]               # 1

t1 = tuple(s1)      # (1,2,3)
t1[0]               # 1

# 교집합, 합집합, 차집합 구하기(set을 유용하게 쓰기)

s1 = set([1,2,3,4,5,6])
s2 = set([4,5,6,7,8,9])

## 1. 교집합
s1 & s2                 # >>> {4, 5, 6}
s1.intersection(s2)     # >>> {4, 5, 6}
s2.intersection(s1)

## 2. 합집합
s1 | s2                 # >>> {1, 2, 3, 4, 5, 6, 7, 8, 9}
s1.union(s2)

## 3. 차집합
s1 - s2                 # >>> {1, 2, 3}
s1.difference(s2)
s2 - s1                 # >>> {8, 9, 7}
s2.difference(s1)

# 집합 자료형 관련 함수들
## 값 1개 추가하기 (add)
s1 = set([1,2,3])
s1.add(4)               # >>> {1,2,3,4}

## 값 여러개 추가하기 (update)
s1 = set([1,2,3])
s1.update([4,5,6])      # >>> {1, 2, 3, 4, 5, 6}

## 특정 값 제거하기 (remove)
s1 = set([1,2,3])
s1.remove(2)            # >>> {1, 3}

